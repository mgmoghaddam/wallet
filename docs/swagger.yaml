definitions:
  handler.Error:
    properties:
      code:
        $ref: '#/definitions/serr.ErrorCode'
      message:
        type: string
      trace_id:
        type: string
    type: object
  member.CreateRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
    type: object
  member.DTO:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
    type: object
  serr.ErrorCode:
    enum:
    - INTERNAL
    - INVALID_USER_ID
    - INVALID_WALLET_ID
    - PERMISSION
    - DISCOUNT_CODE_USED
    - NOT_ENOUGH_BALANCE
    - TRANSACTION_TYPE_NOT_WITHDRAWAL
    type: string
    x-enum-varnames:
    - ErrInternal
    - ErrInvalidUserID
    - ErrInvalidWalletID
    - ErrPermission
    - ErrDiscountCodeUsed
    - ErrNotEnoughBalance
    - ErrTransactionTypeNotWithdrawal
  wallet.AddGiftRequest:
    properties:
      giftCode:
        type: string
      memberID:
        type: integer
      walletID:
        type: integer
    type: object
  wallet.CreateRequest:
    properties:
      balance:
        type: integer
      memberID:
        type: integer
      walletName:
        type: string
    type: object
  wallet.DTO:
    properties:
      balance:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      memberID:
        type: integer
      updatedAt:
        type: string
      walletName:
        type: string
    type: object
info:
  contact: {}
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Health check
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Health check
      tags:
      - Health
  /member:
    post:
      consumes:
      - application/json
      description: Create a new member.
      parameters:
      - description: Member create request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/member.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/member.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Create member
      tags:
      - MemberDTO
    put:
      consumes:
      - application/json
      description: Update a member by id.
      parameters:
      - description: Member update request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/member.DTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/member.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Update member
      tags:
      - MemberDTO
  /member/{id}:
    get:
      consumes:
      - application/json
      description: Get a member by id.
      parameters:
      - description: Member id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/member.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get member
      tags:
      - MemberDTO
  /member/gift/{giftCode}:
    get:
      consumes:
      - application/json
      description: Get Members by gift code.
      parameters:
      - description: Gift code
        in: path
        name: giftCode
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/member.DTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get Members by gift code
      tags:
      - MemberDTO
  /wallet:
    post:
      consumes:
      - application/json
      description: Create a new wallet.
      parameters:
      - description: Wallet create request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/wallet.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/wallet.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Create wallet
      tags:
      - WalletDTO
  /wallet/{walletId}:
    get:
      consumes:
      - application/json
      description: Get a wallet by id.
      parameters:
      - description: Wallet id
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/wallet.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get wallet
      tags:
      - WalletDTO
  /wallet/gift:
    post:
      consumes:
      - application/json
      description: Add a gift code to wallet.
      parameters:
      - description: Add gift request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/wallet.AddGiftRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/wallet.DTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Add gift
      tags:
      - WalletDTO
  /wallets/{userId}:
    get:
      consumes:
      - application/json
      description: Get all wallets.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/wallet.DTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.Error'
      summary: Get wallets
      tags:
      - WalletDTO
swagger: "2.0"
